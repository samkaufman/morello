# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 621b28a0003170be9222da23c41c090ec5e74a300b151cd6975afe99a0695d6e # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 4, 3, 14, 4, 14, 4], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Packed { dim_count: 4, strip_dim: 0, strip_size: 2 }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], false), Standard(MemVec([64, 1024, 32768, 1073741824])))
cc d5426c7bbcebdcc94c7ac335e850051746c583d940c99fee06766bd804c98a59 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [3, 5, 3], dtype: Uint8 }, [TensorSpecAux { contig: 3, aligned: true, level: GL, layout: Standard { dim_order: [0, 1, 2] }, vector_size: None }, TensorSpecAux { contig: 2, aligned: true, level: GL, layout: Packed { dim_count: 3, strip_dim: 1, strip_size: 4 }, vector_size: None }], false), Standard(MemVec([5, 4, 5, 19])))
cc 447224448efccd63b4b9d2fe07ba7933ec0062b1ca30eba898c6466eda8376d7 # shrinks to logical_spec = Primitive(PrimitiveBasics { typ: Move, spec_shape: [3, 3], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None), (0, Some(2))]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(1, None), (0, None)]), vector_size: None }], false)
cc 77094c43ccba12f5f0a16f0597c2abf9a1a0d063b6b636cdfc5d0c4b1f8b00f4 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Matmul { accum: true }, spec_shape: [2, 3, 1], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(1, None), (0, None)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: GL, layout: New([(0, None), (1, None)]), vector_size: None }], false), Standard(MemVec([4, 4, 9, 4])))
cc 086206919c1e3b52e6509d8ae98732239cc8975ce1bb7eb326331724186bcca5 # shrinks to logical_spec = Primitive(PrimitiveBasics { typ: Zero, spec_shape: [1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None)]), vector_size: None }], true)
cc 1776df2ad05dea8e23b1cd294aceb31a18345f5be19b7a66e11e90818a90ec08 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [3, 5, 2, 8, 4, 8, 4], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: GL, layout: New([(0, None), (1, None), (2, None), (3, None), (2, Some(2))]), vector_size: None }, TensorSpecAux { contig: 4, aligned: false, level: GL, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([5, 9, 2, 24])))
cc ca9e4ca2bd3626671393aaff4300d5d86fd65e73f6c080aa2b27c90f387a9906 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [6, 2, 3, 4, 6, 1, 2], dtype: Uint32 }, [TensorSpecAux { contig: 4, aligned: false, level: GL, layout: New([(0, None), (2, None), (3, None), (1, None), (3, Some(2))]), vector_size: None }, TensorSpecAux { contig: 0, aligned: true, level: VRF, layout: New([(0, None), (2, None), (3, None), (1, None), (0, Some(2))]), vector_size: Some(16) }, TensorSpecAux { contig: 1, aligned: false, level: VRF, layout: New([(0, None), (2, None), (3, None), (1, None), (0, Some(2))]), vector_size: Some(16) }], true), Standard(MemVec([4, 1, 11, 19])))
cc 738ff6c91fce386119abb1ccef46e4f7058a7f331660231e41a37b6d2dfe6115 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [3, 4, 1], dtype: Uint32 }, [TensorSpecAux { contig: 4, aligned: true, level: RF, layout: New([(0, None), (1, None), (2, None), (0, Some(3))]), vector_size: None }, TensorSpecAux { contig: 3, aligned: true, level: GL, layout: New([(0, None), (1, None), (2, None), (1, Some(2))]), vector_size: None }], false), Standard(MemVec([4, 1, 1, 7])))
cc b6c7d507517cf04edab95cde53e6436709ccde7ff0a139a76a92753c08a5c0c1 # shrinks to logical_spec = Primitive(PrimitiveBasics { typ: Matmul { accum: true }, spec_shape: [2, 8, 1], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None)]), vector_size: None }, TensorSpecAux { contig: 3, aligned: true, level: RF, layout: New([(0, None), (1, None), (0, Some(2))]), vector_size: None }], false)
cc 85ecfac179f4e3e8d334f2d8d820224a4620d1ec7ad2bdf338306efde4636009 # shrinks to logical_spec = Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [7, 4, 1, 3, 1, 3, 1], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 5, aligned: true, level: GL, layout: New([(0, None), (1, None), (2, None), (3, None), (2, Some(3))]), vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: GL, layout: New([(0, None), (1, None), (2, None), (3, None), (0, Some(7))]), vector_size: None }], false)
cc badd061aacfcb6b746abee0243638b9f193c01a9556a9b49cc8ef58f602cc06f # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [4, 7, 1, 8, 6, 7, 1], dtype: Uint32 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None), (0, Some(8))]), vector_size: None }, TensorSpecAux { contig: 3, level: GL, layout: New([(0, None), (1, None), (2, None), (3, None), (3, Some(32))]), vector_size: None }, TensorSpecAux { contig: 0, level: VRF, layout: New([(0, None), (2, None), (3, None), (1, None), (0, Some(32))]), vector_size: Some(32) }], true), Standard(MemVec([1, 8, 6, 26])))
