# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc aacd13e0e98fbf8e6a3f733e09e91dfdc190ab55a15912215ade751ac62941b5 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Zero, spec_shape: [2], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None)]), vector_size: None }], false), Standard(MemVec([0, 0, 0, 0]))), binary_scale = false
cc 590de4e40759fce2757b6a683999b03a466eb69a73380427ae75edeef3aff534 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Zero, spec_shape: [1], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None)]), vector_size: None }], false), Standard(MemVec([0, 0, 0, 0]))), binary_scale = false
cc 24d7e2056cb6fa8700bb2fdd56d1a25a3d2682f0be04fc918272764bc4052479 # shrinks to decision = Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Zero, spec_shape: [1], dtype: Uint8 }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: New([(0, None)]), vector_size: None }], false), Standard(MemVec([0, 0, 0, 0]))), actions_costs: [], children: [] }
cc 36f5b3b24c8ce6213b11d355c1f94b7e5c080bfa426ced233b65d519c1e9dc1b # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [2, 3, 3, 2, 7, 2, 5], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (2, None), (3, None), (1, None), (1, Some(32))]), vector_size: None }, TensorSpecAux { contig: 0, aligned: true, level: VRF, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: Some(8) }, TensorSpecAux { contig: 5, aligned: true, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None), (1, Some(8))]), vector_size: None }], true), Standard(MemVec([7, 2, 15, 6])))
cc 86d1a205563171bde4361a6a83de9764f666cd7ecbbbc770ef0109ca87b31da4 # shrinks to decision = Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [2, 4, 1, 6, 4, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 0, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 3, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([7, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1338624, peaks: MemVec([7, 0, 0, 0]), depth: 10 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 1, 1, 6, 2, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 0, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([7, 2, 15, 29]))), actions_costs: [(0, Cost { main: 2324, peaks: MemVec([7, 0, 0, 0]), depth: 9 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 0, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([6, 2, 15, 29]))), actions_costs: [(0, Cost { main: 804, peaks: MemVec([6, 0, 0, 0]), depth: 8 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([6, 2, 15, 29]))), actions_costs: [(0, Cost { main: 67, peaks: MemVec([6, 0, 0, 0]), depth: 7 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([5, 2, 15, 29]))), actions_costs: [(0, Cost { main: 56, peaks: MemVec([5, 0, 0, 0]), depth: 6 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([4, 2, 15, 29]))), actions_costs: [(0, Cost { main: 45, peaks: MemVec([4, 0, 0, 0]), depth: 5 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([3, 2, 15, 29]))), actions_costs: [(0, Cost { main: 34, peaks: MemVec([3, 0, 0, 0]), depth: 4 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([2, 2, 15, 29]))), actions_costs: [(0, Cost { main: 23, peaks: MemVec([2, 0, 0, 0]), depth: 3 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([1, 2, 15, 29]))), actions_costs: [(0, Cost { main: 12, peaks: MemVec([1, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([0, 2, 15, 29]))), actions_costs: [(1, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([0, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([1, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([2, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([3, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([4, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([5, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 1, 1, 6, 2, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([6, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1280, peaks: MemVec([6, 0, 0, 0]), depth: 6 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: None }], false), Standard(MemVec([5, 2, 15, 29]))), actions_costs: [(0, Cost { main: 12, peaks: MemVec([0, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([5, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 1, 1, 6, 2, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([5, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1268, peaks: MemVec([5, 0, 0, 0]), depth: 5 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([3, 2, 15, 29]))), actions_costs: [(0, Cost { main: 12, peaks: MemVec([0, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([3, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 1, 1, 6, 2, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([3, 2, 15, 29]))), actions_costs: [(2, Cost { main: 1256, peaks: MemVec([3, 0, 0, 0]), depth: 4 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([2, 2, 15, 29]))), actions_costs: [(0, Cost { main: 23, peaks: MemVec([2, 0, 0, 0]), depth: 3 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([1, 2, 15, 29]))), actions_costs: [(0, Cost { main: 12, peaks: MemVec([1, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([0, 2, 15, 29]))), actions_costs: [(1, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([0, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([1, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 1, 1, 6, 2, 6, 2], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([2, 2, 15, 29]))), actions_costs: [(2, Cost { main: 1200, peaks: MemVec([0, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Matmul { accum: true }, spec_shape: [1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 2, level: RF, layout: New([(0, None), (1, None)]), vector_size: None }, TensorSpecAux { contig: 2, level: RF, layout: New([(0, None), (1, None)]), vector_size: None }, TensorSpecAux { contig: 2, level: RF, layout: New([(0, None), (1, None)]), vector_size: None }], false), Standard(MemVec([2, 2, 15, 29]))), actions_costs: [(0, Cost { main: 100, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([2, 2, 15, 29]))), actions_costs: [(0, Cost { main: 23, peaks: MemVec([2, 0, 0, 0]), depth: 3 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([1, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([1, 2, 15, 29]))), actions_costs: [(0, Cost { main: 12, peaks: MemVec([1, 0, 0, 0]), depth: 2 })], children: [Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([0, 2, 15, 29]))), actions_costs: [(0, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }, Decision { spec: Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 4, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], false), Standard(MemVec([0, 2, 15, 29]))), actions_costs: [(1, Cost { main: 1, peaks: MemVec([0, 0, 0, 0]), depth: 1 })], children: [] }] }] }] }] }] }] }] }
cc 88cd833f0bc55ebeea2f93e4572a251c0cae3b68cdb462252e96f8730b96eca7 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [2, 2, 2, 4, 7, 2, 3], dtype: Uint32 }, [TensorSpecAux { contig: 0, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, level: VRF, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: Some(32) }, TensorSpecAux { contig: 2, level: L1, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: None }], false), Standard(MemVec([7, 11, 9, 29])))
