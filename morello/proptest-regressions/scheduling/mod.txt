# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 36884ecc19b4e544027bd2c09e9f97ad40ddac281ceb7a9265345b9d2c08a5a6 # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: Move, spec_shape: [7, 1, 8], dtypes: [Sint32, Bfloat16] }, PrimitiveBasics { typ: Move, spec_shape: [7, 1, 8], dtypes: [Sint32, Sint32] }, PrimitiveBasics { typ: Max { dim: 1, accum: false }, spec_shape: [7, 1, 8], dtypes: [Float32, Sint32] }], operand_auxes: [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: VRF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic)]), vector_size: Some(8) }], serial_only: false }, Standard(MemVec([2, 11, 0, 0])))
cc f3a9623b6ae4cc98fa1cebc607329abfaae9cdca2b15cf04a9188a9af929c829 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: SoftmaxDenominatorAndUnscaled { scan_dim: 2, accum: false }, spec_shape: [1, 1, 4, 1], dtypes: [Bfloat16, Sint32, Uint16] }, [TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (1, Dynamic), (3, Dynamic), (2, Packed(2))], contig: 5 }, vector_size: None }, TensorSpecAux { aligned: true, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 4 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 4 }, vector_size: None }], false), Standard(MemVec([3, 2, 14, 0])))
cc 64f39f2aa65acb6e7de93c873a59b6f2bc153ad281fc01dac8c137bb401025e9 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: DivideVecScalar { scan_dim: 2 }, spec_shape: [1, 5, 5, 6], dtypes: [Uint16, Float32, Sint32] }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }], true), Standard(MemVec([8, 8, 256*, 0*])))
cc 05436551e30619ca13a599d33260acb607c5bf966e1d93a73292d91185ebea6b # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: SoftmaxComplete { scan_dim: 0 }, spec_shape: [2, 3, 3, 8], dtypes: [Float32, Uint8, Uint8, Uint16] }, PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [2, 3, 8, 2, 7, 4, 2], dtypes: [Sint32, Uint8, Float32] }, PrimitiveBasics { typ: DivideVecScalar { scan_dim: 2 }, spec_shape: [2, 8, 2, 7], dtypes: [Sint16, Bfloat16, Sint32] }], operand_auxes: [TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (3, Dynamic), (1, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: true, level: RF, layout: Layout { dims: [(1, Dynamic), (2, Dynamic), (3, Dynamic), (0, Dynamic)], contig: 3 }, vector_size: None }, TensorSpecAux { aligned: true, level: L1, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (1, Dynamic), (3, Dynamic)], contig: 2 }, vector_size: None }], serial_only: true }, Standard(MemVec([11, 12, 8*, 32768*])))
cc bbdceedc81dd8e3db498a4fe2693fd7d773edc2f2f953fc9f55c1938ce9039bc # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: Move, spec_shape: [1, 5, 8, 3], dtypes: [Uint32, Uint8] }, PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 5, 4, 8, 3, 7, 4], dtypes: [Sint16, Sint32, Uint32] }], operand_auxes: [TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }], serial_only: false }, Standard(MemVec([0, 8, 0*, 0*])))
cc d6ce59456e1faeff76f212f962fb4996d0e55069773c7ab002ca693acc7aa4f0 # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: Broadcast { dim: 1 }, spec_shape: [2, 1, 1, 2], dtypes: [Sint16, Uint8] }, PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [2, 1, 2, 1, 2, 1, 3], dtypes: [Sint8, Uint32, Sint16] }, PrimitiveBasics { typ: SoftmaxDenominator { scan_dim: 2, accum: false }, spec_shape: [2, 2, 3, 4], dtypes: [Sint32, Float32, Sint8] }], operand_auxes: [TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }], serial_only: false }, Standard(MemVec([6, 1, 256*, 0*])))
cc 5eab8b84019e4a4241c8ddd2df8eb93c2bcbad292191759fa417f28227b7a5fb # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 1, 1, 1, 2, 4, 8], dtypes: [Float32, Sint8, Uint8] }, [TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 4 }, vector_size: None }], true), Standard(MemVec([8, 1, 4*, 131072*])))
cc 63378bb1cb6b78306ddc073499068da39667a03d77161b6aef0b3c1ff0059f86 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Matmul { accum: true }, spec_shape: [3, 7, 4, 5], dtypes: [Sint16, Bfloat16, Float32] }, [TensorSpecAux { aligned: false, level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 1 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 2 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 2 }, vector_size: None }], true), Standard(MemVec([8, 6, 1*, 134217728*])))
cc f9c30bbd453907544c35e119d97b28c338cf27a27823828ef8d35901230ae89e # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Matmul { accum: true }, spec_shape: [4, 2, 3, 6], dtypes: [Float32, Bfloat16, Sint32] }, [TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (0, Packed(2))], contig: 4 }, vector_size: None }, TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (0, Packed(2))], contig: 2 }, vector_size: None }, TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (0, Packed(2))], contig: 2 }, vector_size: None }], true), Standard(MemVec([6, 6, 2048*, 524288*])))
cc e78fd27b1025123840ffe6c8791a12bd073f680256b8d6addedbbdbfe1144840 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Matmul { accum: true }, spec_shape: [1, 1, 3, 1], dtypes: [Float32, Uint16, Sint16] }, [TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 1 }, vector_size: None }, TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 3 }, vector_size: None }], false), Standard(MemVec([3, 0, 4*, 0*])))
cc 61639a31e99c52accca7cf1b31942456f39936fab10caf1f73f0bb70b18a5a88 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [8, 4, 2, 5, 3, 7, 8], dtypes: [Uint32, Bfloat16, Float32] }, [TensorSpecAux { aligned: true, level: RF, layout: Layout { dims: [(1, Dynamic), (2, Dynamic), (3, Dynamic), (0, Dynamic)], contig: 4 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }], true), Standard(MemVec([2, 15, 0*, 0*])))
cc 59fe537bb69bb4f26de1f21f5f54ea0f9e813a79e40bc347b346b7ad12688f1c # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: Max { dim: 1, accum: true }, spec_shape: [2, 2, 2, 7], dtypes: [Bfloat16, Uint32] }, PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [2, 2, 8, 2, 7, 4, 3], dtypes: [Sint32, Uint8, Bfloat16] }], operand_auxes: [TensorSpecAux { aligned: true, level: L1, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (3, Dynamic), (1, Dynamic)], contig: 4 }, vector_size: None }, TensorSpecAux { aligned: true, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (1, Packed(2))], contig: 1 }, vector_size: None }, TensorSpecAux { aligned: true, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }], serial_only: false }, Standard(MemVec([13, 8, 8192*, 0*])))
cc 44cc49714cdcbbabdea839c822e229de1cab03f632bdd9d39aec8e494d534e68 # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: SoftmaxDenominator { scan_dim: 2, accum: true }, spec_shape: [1, 8, 1, 2], dtypes: [Bfloat16, Uint32, Sint32] }, PrimitiveBasics { typ: Max { dim: 0, accum: false }, spec_shape: [7, 8, 1, 2], dtypes: [Sint8, Bfloat16] }, PrimitiveBasics { typ: DivideVec, spec_shape: [7, 8, 1, 2], dtypes: [Uint32, Sint32, Sint8] }], operand_auxes: [TensorSpecAux { aligned: true, level: L1, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (3, Dynamic), (1, Dynamic)], contig: 4 }, vector_size: None }, TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (1, Packed(4))], contig: 3 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (1, Packed(4))], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: true, level: L1, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (1, Dynamic), (3, Dynamic)], contig: 4 }, vector_size: None }], serial_only: true }, Standard(MemVec([7, 11, 4*, 16777216*])))
cc 910821191d1091e4ff68b0ddc3f629624db4a2cc4a5fd5a050657c1359e1df81 # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: Max { dim: 2, accum: false }, spec_shape: [8, 3, 2], dtypes: [Sint16, Sint16] }, PrimitiveBasics { typ: DivideVecScalar { scan_dim: 1 }, spec_shape: [8, 3, 2], dtypes: [Uint32, Uint16, Sint16] }], operand_auxes: [TensorSpecAux { aligned: true, level: L1, layout: Layout { dims: [(1, Dynamic), (2, Dynamic), (0, Dynamic)], contig: 3 }, vector_size: None }, TensorSpecAux { aligned: true, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (0, Packed(2))], contig: 4 }, vector_size: None }, TensorSpecAux { aligned: true, level: RF, layout: Layout { dims: [(1, Dynamic), (2, Dynamic), (0, Dynamic)], contig: 2 }, vector_size: None }], serial_only: true }, Standard(MemVec([8, 5, 1*, 0*])))
cc 32f451ae42ef91d0ac57ac56c7ca9359b689dc8425b3bcf315231fe293dc0014 # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: SoftmaxComplete { scan_dim: 3 }, spec_shape: [2, 6, 8, 8], dtypes: [Sint16, Sint32, Float32, Uint32] }, PrimitiveBasics { typ: Softmax { scan_dim: 2 }, spec_shape: [2, 6, 8, 8], dtypes: [Uint32, Sint16] }], operand_auxes: [TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 1 }, vector_size: None }, TensorSpecAux { aligned: true, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (3, Dynamic), (2, Dynamic)], contig: 4 }, vector_size: None }, TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (1, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (2, Packed(2))], contig: 5 }, vector_size: None }], serial_only: false }, Standard(MemVec([0, 3, 4*, 1024*])))
cc 693ca82a04bf9f9b7016ca1ee4339c93e1cdd597bd57a7248cd14e0a14d33940 # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: SoftmaxComplete { scan_dim: 2 }, spec_shape: [8, 7, 6, 5], dtypes: [Sint16, Uint8, Sint16, Uint32] }, PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [8, 7, 1, 6, 5, 7, 8], dtypes: [Uint32, Sint16, Sint16] }], operand_auxes: [TensorSpecAux { aligned: false, level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: false, level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (0, OddEven(8))], contig: 5 }, vector_size: None }, TensorSpecAux { aligned: true, level: GL, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (1, Dynamic), (3, Dynamic)], contig: 3 }, vector_size: None }, TensorSpecAux { aligned: false, level: VRF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (0, Packed(4))], contig: 1 }, vector_size: Some(8) }], serial_only: true }, Standard(MemVec([3, 0, 16384*, 32*])))
cc b93171426ec0770f5c607b5d055b7f6bfe8280804585444c93116d9c4a64d6c4 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: SoftmaxDenominator { scan_dim: 3, accum: true }, spec_shape: [1, 1, 1, 2, 4], dtypes: [Uint16, Float32, Sint32] }, [TensorSpecAux { level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (4, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (4, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (4, Dynamic)], contig: 0 }, vector_size: None }], true), Standard(MemVec([1, 14, 0*, 0*])))
cc 5d46f1cb0351a0cd60a66854fd597b29920eeb578e677fc747c2f8e303d80c1d # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: SoftmaxDenominator { scan_dim: 0, accum: true }, spec_shape: [2, 1], dtypes: [Uint8, Float32, Sint16] }, [TensorSpecAux { level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic)], contig: 1 }, vector_size: None }, TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic)], contig: 2 }, vector_size: None }, TensorSpecAux { level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic)], contig: 2 }, vector_size: None }], false), Standard(MemVec([14, 13, 4096*, 0*])))
cc 2adb80b70e62ed92e7bdf053a96a5d734ec040cc10e98fd5dece61ddf0990ef6 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: SoftmaxDenominator { scan_dim: 0, accum: true }, spec_shape: [2, 5], dtypes: [Uint8, Uint32, Bfloat16] }, [TensorSpecAux { level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic)], contig: 0 }, vector_size: None }, TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic)], contig: 0 }, vector_size: None }], false), Standard(MemVec([9, 6, 2048*, 0*])))
cc d0a53dd1920cc283e34a7a2dd364bff3c2e3b394fb4b817c31d415aa4b8d381a # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Max { dim: 3, accum: true }, spec_shape: [2, 8, 6, 6, 5], dtypes: [Uint16, Sint32] }, [TensorSpecAux { level: GL, layout: Layout { dims: [(0, Dynamic), (2, Dynamic), (3, Dynamic), (4, Dynamic), (1, Dynamic)], contig: 4 }, vector_size: None }, TensorSpecAux { level: VRF, layout: Layout { dims: [(1, Dynamic), (2, Dynamic), (3, Dynamic), (4, Dynamic), (0, Dynamic)], contig: 4 }, vector_size: Some(4) }], false), Standard(MemVec([11, 13, 8192*, 1024*])))
cc 9186ab35497abdc282ea80cafbd55aeae7bc3825cad7fbf99877591cff1c3241 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: SoftmaxDenominator { scan_dim: 3, accum: true }, spec_shape: [1, 3, 2, 8, 8], dtypes: [Sint32, Sint16, Uint16] }, [TensorSpecAux { level: VRF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (3, Dynamic), (4, Dynamic), (2, Dynamic)], contig: 2 }, vector_size: Some(8) }, TensorSpecAux { level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (4, Dynamic)], contig: 3 }, vector_size: None }, TensorSpecAux { level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (3, Dynamic), (4, Dynamic), (2, Dynamic)], contig: 3 }, vector_size: None }], false), Standard(MemVec([5, 7, 16384*, 128*])))
cc d455b2a05b99a2afd9148e37dab76ad72ca5bd58171c7c1a8f1062cc73897b24 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Max { dim: 2, accum: false }, spec_shape: [1, 1, 7, 8], dtypes: [Uint8, Sint8] }, [TensorSpecAux { level: GL, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 1 }, vector_size: None }, TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)], contig: 4 }, vector_size: None }], true), Standard(MemVec([12, 3, 2*, 64*])))
cc 01b4dea864f874485b151fefac17b188f9380d357522978868853bd1af29eeeb # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Max { dim: 1, accum: false }, spec_shape: [1, 1, 1], dtypes: [Uint8, Sint8] }, [TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 3 }, vector_size: None }, TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 3 }, vector_size: None }], true), Standard(MemVec([1, 0, 16*, 0*])))
cc 606113273e2c9d1a17ab9c21c4f24a6a21b11d0248b800814e07b1602b86fba7 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Max { dim: 1, accum: false }, spec_shape: [1, 1, 1], dtypes: [Uint8, Sint32] }, [TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 3 }, vector_size: None }, TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic)], contig: 3 }, vector_size: None }], false), Standard(MemVec([7, 10, 0*, 0*])))
cc 94c4cc77d182232550e1c3219e61b705065ef7212e899415a268a482c90cfcbe # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Max { dim: 3, accum: false }, spec_shape: [1, 1, 1, 1, 1], dtypes: [Uint8, Sint32] }, [TensorSpecAux { level: RF, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (4, Dynamic)], contig: 5 }, vector_size: None }, TensorSpecAux { level: L1, layout: Layout { dims: [(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic), (4, Dynamic)], contig: 5 }, vector_size: None }], false), Standard(MemVec([15, 5, 32768*, 0*])))
