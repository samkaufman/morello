# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 133a507b23759d48be0481ddd0eb2d904f8d89bb7011af837f51021352fa7c90 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [2, 1, 2, 6, 8, 3, 7], dtypes: [Float32, Bfloat16, Float32] }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Layout([(0, Dynamic), (2, Dynamic), (3, Dynamic), (1, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 2, aligned: false, level: L1, layout: Layout([(0, Dynamic), (3, Dynamic), (1, Dynamic), (2, Dynamic)]), vector_size: None }], false), Standard(MemVec([4, 8, 14, 0])))
cc cd9cb248ed599349e1b860e6892a54e74e944f17cb9bbae3ad10b8bb132f3514 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 1, 1, 3, 4, 1, 1], dtypes: [Sint32, Uint8, Sint32] }, [TensorSpecAux { contig: 0, aligned: true, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: GL, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }], true), Standard(MemVec([3, 0, 11, 17])))
cc 4f89fe71491e766d096a78779231d57bfe1a40de6bea0be5144c57c8491741e7 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 1, 2, 3, 6, 1, 2], dtypes: [Sint16, Uint32, Uint8] }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: RF, layout: Layout([(0, Dynamic), (2, Dynamic), (1, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }], false), Standard(MemVec([4, 6, 16, 0])))
cc 52446cd008f3cc9d974669b3859b28292b808bf6f652c3ee2242dd62a3038c83 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 3, 2, 5, 5, 4, 1], dtypes: [Sint32, Sint32, Uint32] }, [TensorSpecAux { contig: 0, aligned: false, level: GL, layout: Layout([(0, Dynamic), (2, Dynamic), (3, Dynamic), (1, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: GL, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: RF, layout: Layout([(0, Dynamic), (2, Dynamic), (3, Dynamic), (1, Dynamic)]), vector_size: None }], false), Standard(MemVec([0, 10, 16, 21])))
cc 39e5c53387f90e84bb28033ec1773e0e35fd75b2820a64b0a0ea49d6c3370d87 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Softmax { scan_dim: 2 }, spec_shape: [1, 1, 1, 1], dtypes: [Sint8, Uint16] }, [TensorSpecAux { contig: 4, aligned: false, level: L1, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }], false), Standard(MemVec([5, 3, 11, 0])))
cc 5fac291877cd2a931aebf3611be965e3147e63728ee5d236c7e657a77ad4c6ca # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [1, 2, 8, 8], dtypes: [Sint8, Float32] }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (3, Dynamic), (2, Dynamic)]), vector_size: None }], false), Standard(MemVec([3, 7, 0, 0])))
