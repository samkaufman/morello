# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 472b8b104b0e020cd4fbc437c1f54acf0b7f17d90e31b19694e197eaef5f68cb # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: Matmul { accum: false }, spec_shape: [4, 8, 5], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [1, 0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: VRF, layout: Standard { dim_order: [1, 0] }, vector_size: Some(4) }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [1, 0] }, vector_size: None }], true), Standard(MemVec([2, 32, 2048, 32768]))), Spec(Primitive(PrimitiveBasics { typ: Matmul { accum: false }, spec_shape: [4, 8, 5], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [1, 0] }, vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: VRF, layout: Standard { dim_order: [1, 0] }, vector_size: Some(4) }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [1, 0] }, vector_size: None }], true), Standard(MemVec([2, 32, 7350, 32768]))))
cc fe255c4dcc1a834a443e08118da1f1037b4343666ce960486872e585ab3e4b91 # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: Zero, spec_shape: [4, 4, 7, 5], dtype: Uint8 }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: Packed { dim_count: 4, strip_dim: 0, strip_size: 2 }, vector_size: None }], true), Standard(MemVec([1, 64, 4, 8192]))), Spec(Primitive(PrimitiveBasics { typ: Zero, spec_shape: [4, 4, 7, 5], dtype: Uint8 }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: Packed { dim_count: 4, strip_dim: 0, strip_size: 2 }, vector_size: None }], true), Standard(MemVec([17, 64, 4, 8192]))))
cc fa188184bb09aa29406e8e11d922e0f1ca6e660d2c34716d6e9c56954a25fb2e # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 1, 3, 1, 2, 1, 2], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], true), Standard(MemVec([2, 128, 64, 8]))), Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 1, 3, 1, 2, 1, 2], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], true), Standard(MemVec([4, 128, 64, 8]))))
cc fe73c695e966eae4d8a546b784c547598197022f8a94e758a84dc8483b93272e # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: Zero, spec_shape: [1, 2, 2, 1], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], false), Standard(MemVec([5, 2, 9, 3]))), Spec(Primitive(PrimitiveBasics { typ: Zero, spec_shape: [1, 2, 2, 1], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], false), Standard(MemVec([5, 2, 9, 4]))))
cc 2067110d0c6f934b163a537d0a8eba8909102012f08f9ad411ab01a47fc3ed91 # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [2, 1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: GL, layout: Standard { dim_order: [0, 1] }, vector_size: None }, TensorSpecAux { contig: 2, aligned: true, level: RF, layout: Standard { dim_order: [0, 1] }, vector_size: None }], true), Standard(MemVec([1, 11, 12, 6]))), Spec(Primitive(PrimitiveBasics { typ: Move, spec_shape: [2, 1], dtype: Uint32 }, [TensorSpecAux { contig: 1, aligned: true, level: GL, layout: Standard { dim_order: [0, 1] }, vector_size: None }, TensorSpecAux { contig: 2, aligned: true, level: RF, layout: Standard { dim_order: [0, 1] }, vector_size: None }], true), Standard(MemVec([1, 11, 12, 8]))))
cc e5bcf031c71378d5731d291a203e2e7b59f2f8c3630a2d863d39003c82708014 # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 5, 2, 1, 2, 1, 1], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 3, aligned: false, level: GL, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 3, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], false), Standard(MemVec([2, 9, 12, 11]))), Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 5, 2, 1, 2, 1, 1], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 3, aligned: false, level: GL, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }, TensorSpecAux { contig: 3, aligned: false, level: RF, layout: Standard { dim_order: [0, 1, 2, 3] }, vector_size: None }], false), Standard(MemVec([3, 9, 12, 11]))))cc d2e9d97aa2c0198f727efa6acb0860ce1e554cb9069fcd4184ca17dad855da47 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 4, 2, 2, 2, 2, 2], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None), (0, Some(2))]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], true), Standard(MemVec([6, 0, 12, 4])))
cc 67eec75e8d201c873e4ad12e5f5af4c57221fbc5827e96bf388728835951296c # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 6, 2, 1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], true), Standard(MemVec([4, 11, 12, 1]))), Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 6, 2, 1, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }], true), Standard(MemVec([5, 11, 12, 1]))))
cc 1056b5d23eb60d62da8adf9371be8a549eaac45957f7a578d9268b080df3385e # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 2, 1, 1, 2, 1, 2], dtype: Uint32 }, [TensorSpecAux { contig: 0, aligned: false, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: true, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 2, aligned: true, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None), (1, Some(2))]), vector_size: None }], false), Standard(MemVec([7, 8, 8, 1])))
cc b6cb9cbb9df41143a3493f3d10523613c5f29055d24e2c3826ee739cf5920ab0 # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: Conv { accum: true }, spec_shape: [1, 4, 2, 2, 1, 1, 1], dtype: Uint8 }, [TensorSpecAux { contig: 0, aligned: false, level: GL, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 2, aligned: true, level: L1, layout: New([(0, None), (1, None), (2, None), (3, None), (1, Some(2))]), vector_size: None }, TensorSpecAux { contig: 4, aligned: false, level: RF, layout: New([(0, None), (2, None), (3, None), (1, None), (2, Some(2))]), vector_size: None }], true), Standard(MemVec([5, 7, 2, 0])))
cc b2b4e3877b1504e177e209db7f89bb9894163ce5a4b23007396065fa38d54004 # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 3, 3, 2, 1, 1, 1], dtypes: [Sint8, Uint32, Uint8] }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 2, aligned: false, level: VRF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: Some(32) }, TensorSpecAux { contig: 0, aligned: true, level: GL, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: None }], false), Standard(MemVec([0, 4, 2, 0]))), Spec(Primitive(PrimitiveBasics { typ: Conv { accum: false }, spec_shape: [1, 3, 3, 2, 1, 1, 1], dtypes: [Sint8, Uint32, Uint8] }, [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: None }, TensorSpecAux { contig: 2, aligned: false, level: VRF, layout: New([(0, None), (1, None), (2, None), (3, None)]), vector_size: Some(32) }, TensorSpecAux { contig: 0, aligned: true, level: GL, layout: New([(0, None), (2, None), (3, None), (1, None)]), vector_size: None }], false), Standard(MemVec([0, 5, 2, 0]))))
cc 500c23187a7f8538414de3261c9cfac8b402f6c6d7207092cded33b6c8e62743 # shrinks to spec_pair = (Spec(Primitive(PrimitiveBasics { typ: OnePrefix, spec_shape: [1], dtypes: [Bfloat16, Bfloat16] }, [TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Layout([(0, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 2, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic)]), vector_size: None }], false), Standard(MemVec([5, 4, 2, 0]))), Spec(Primitive(PrimitiveBasics { typ: OnePrefix, spec_shape: [1], dtypes: [Bfloat16, Bfloat16] }, [TensorSpecAux { contig: 1, aligned: false, level: L1, layout: Layout([(0, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 2, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic)]), vector_size: None }], false), Standard(MemVec([7, 4, 2, 0]))))
cc 96b97fad932ebd9e555fc46f253565bf895722924ad4a5abfd17165cde52b815
cc 116358fd3efd59156a6485b33f6698e5c3595c9b2798d491c3df3e3b22f758a4 # shrinks to spec = Spec(Compose { components: [PrimitiveBasics { typ: Matmul { accum: false }, spec_shape: [1, 3, 7, 1], dtypes: [Bfloat16, Uint8, Uint16] }, PrimitiveBasics { typ: OnePrefix, spec_shape: [3, 7], dtypes: [Bfloat16, Bfloat16] }, PrimitiveBasics { typ: DivideVec, spec_shape: [3, 7], dtypes: [Sint8, Sint32, Bfloat16] }], operand_auxes: [TensorSpecAux { contig: 1, aligned: false, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 0, aligned: false, level: GL, layout: Layout([(0, Dynamic), (1, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: L1, layout: Layout([(0, Dynamic), (1, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 1, aligned: true, level: RF, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic)]), vector_size: None }], serial_only: true }, Standard(MemVec([3, 0, 3, 6])))
cc 6337f7fc0e47b2fd157fd8ee9b904495af275ae86671b1665b602d0e00de91da # shrinks to spec = Spec(Primitive(PrimitiveBasics { typ: SoftmaxDenominatorAndUnscaled { scan_dim: 2, accum: false }, spec_shape: [1, 2, 2, 2], dtypes: [Uint8, Sint8, Sint16] }, [TensorSpecAux { contig: 0, aligned: false, level: GL, layout: Layout([(0, Dynamic), (1, Dynamic), (2, Dynamic), (3, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: GL, layout: Layout([(0, Dynamic), (2, Dynamic), (3, Dynamic), (1, Dynamic)]), vector_size: None }, TensorSpecAux { contig: 4, aligned: true, level: L1, layout: Layout([(0, Dynamic), (2, Dynamic), (1, Dynamic), (3, Dynamic)]), vector_size: None }], false), Standard(MemVec([3, 7, 9, 7])))
